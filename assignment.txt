2210631 宗友 拓歩

実行結果：
X[0] F[0]> 0 0
X[1] F[1]> 1.5708 1
X[2] F[2]> 3.14159 0
X[3] F[3]> 4.71239 -1
X[4] F[4]> 6.28319 0
X[5] F[5]> 7.85398 1
X[6] F[6]> 9.42478 0
X[7] F[7]> 10.99557 -1
X[8] F[8]> 12.56637 0
のように、sin波の各点を与えたところ、ppm画像が得られた。

ソース・プログラム：
#include <stdio.h>
#include <stdlib.h>
#include "API.c"

#define nTH 9

struct color white = { 255, 255, 255 };
struct color black = { 0, 0, 0 };
struct color red = { 255, 0, 0 };

/* Lagrange Three point Interpolation */

int main ( int argc, char **argv ) {
  double x, f;
  double X[nTH];
  double F[nTH];

  for(int n = 0; n < nTH; n++)
  {
    printf("X[%d] F[%d]> ", n, n);
    scanf( "%lf %lf", &X[n], &F[n] );
  }

  img_clear();

  for (x = 0; x<= 15; x+=0.1) {
    
    img_putpixel(red, x*10, (sin(x)*10+(PIXEL/2)));
  }

  for(int tmp = 1;tmp<=PIXEL;tmp++)
  {
    img_putpixel(black, tmp, PIXEL/2);
  }
  //printf( "x for f(x)> " );
  //while ( scanf( "%lf", &x ) != EOF ) {		/* ファイルの終りまでを行ごとに処理する決まり文句 */
  for (x = 0; x<= 15; x+=0.1) {
    /*f = (       (x-X[1])*(x-X[2]))/(        (X[0]-X[1])*(X[0]-X[2])) * F[0]
      + ((x-X[0])       *(x-X[2]))/((X[1]-X[0])        *(X[1]-X[2])) * F[1]
      + ((x-X[0])*(x-X[1])       )/((X[2]-X[0])*(X[2]-X[1])        ) * F[2];*/
      f = 0;
    for(int j = 0; j < nTH; j++)
    {
        double top = 1, bottom = 1;
        for(int i = 0; i < nTH; i++)
        {
            if(i != j)
            {
                top *= x - X[i];
                bottom *= X[j]-X[i];
            }
        }
        f += (top/bottom)*F[j];
    }
    //printf( "f(%lf) = %lf\n", x, f );
    //printf( "x for f(x)> " );
    
    img_putpixel(black, x*10, (f*10+(PIXEL/2)));
  }
  //printf( "\n" );
  img_write();
  return 0;
}

ヘッダファイル：
#define PIXEL 150
struct color { unsigned char r, g, b; };
void img_clear(void);
void img_write(void);
void img_putpixel(struct color c, int x, int y);
void img_fillcircle(struct color c, double x, double y, double r);

描画プログラム：
#include <stdio.h>
#include <stdlib.h>
#include "img.h"
static unsigned char buf[PIXEL][PIXEL][3];
static int filecnt = 0;
static char fname[100];
void img_clear(void) {
    int i, j;
    for(j = 0; j < PIXEL; ++j) {
        for(i = 0; i < PIXEL; ++i) {
            buf[j][i][0] = buf[j][i][1] = buf[j][i][2] = 255;
        }
    }
}

void img_write(void) {
    sprintf(fname, "img%04d.ppm", ++filecnt);
    FILE *f = fopen(fname, "wb");
    if(f == NULL) { fprintf(stderr, "can’t open %s\n", fname); exit(1); }
    fprintf(f, "P6\n%d %d\n255\n", PIXEL, PIXEL);
    fwrite(buf, sizeof(buf), 1, f);
    fclose(f);
}

void img_putpixel(struct color c, int x, int y) {
    if(x < 0 || x >= PIXEL || y < 0 || y >= PIXEL) { 
        return; 
    }
    buf[PIXEL-y-1][x][0] = c.r;
    buf[PIXEL-y-1][x][1] = c.g;
    buf[PIXEL-y-1][x][2] = c.b;
}